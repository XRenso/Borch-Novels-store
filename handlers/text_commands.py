from loader import dp,db
from aiogram import types
import phrase as phr
import keyboards as kb
from states.Store import Store
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
@dp.message_handler(content_types=['text'])
async def get_text(message: types.Message):
    user = db.return_user_info(message.from_user.id)
    if user != 0 and user['accept_paper'] == 1:
        match message.text:
            case phr.library:
                markup = kb.return_library(db.return_user_library_games(message.from_user.id))
                if not len(markup['inline_keyboard']):
                    await message.answer_photo(photo='AgACAgIAAxkBAAIwh2TlvPH-RIgfxZAjx5qUZJ8SXHa2AAKq2TEbo4EhS_6Xi0_d9uahAQADAgADeQADMAQ',caption='–£ –≤–∞—Å –Ω–µ—Ç –∏–≥—Ä ‚ùå')
                else:
                    if len(user['user_groups']) == 1:
                        await message.answer_photo(photo='AgACAgIAAxkBAAIwh2TlvPH-RIgfxZAjx5qUZJ8SXHa2AAKq2TEbo4EhS_6Xi0_d9uahAQADAgADeQADMAQ',caption='–í–∞—à–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ üìÇ', reply_markup=markup)
                    else:
                        await message.answer_photo(
                            photo='AgACAgIAAxkBAAIwh2TlvPH-RIgfxZAjx5qUZJ8SXHa2AAKq2TEbo4EhS_6Xi0_d9uahAQADAgADeQADMAQ',
                            caption='–í–∞—à–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ üìÇ', reply_markup=kb.lib_category(user['user_groups']))

            case phr.profile:
                user_info = db.return_user_info(message.from_user.id)
                if user_info != 0:
                    curr_game = db.return_game_info(user_info['curr_game_code'])
                    if curr_game == 0:
                        curr_game = '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤—ã –Ω–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç–µ —Å–µ–π—á–∞—Å –∫–∞–∫—É—é-–ª–∏–±–æ –∏–≥—Ä—É ‚ùå'
                    else:
                        curr_game = curr_game['game_name']

                    achivments = user_info['achivements']
                    markup = kb.profile_kb_have_achivements
                    if len(achivments) < 1:
                        achivments = '–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π ‚ùå'
                        markup = kb.profile_kb_not_have_achivements
                    await message.answer_photo(photo='AgACAgIAAxkBAAIlRGS0kvTRaTvuTMIEHLw6pM_Se0S3AAL7zjEbWFuhSQhs6LkM8O3DAQADAgADeQADLwQ',
                                               caption=f'–í–∞—à id - {user_info["user_id"]}'
                                         f'\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ üìÇ- {len(db.return_user_library_games(message.from_user.id))}'
                                         f'\n–í—ã –∑–∞–Ω—è—Ç—ã üåê - {curr_game}'
                                         f'\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞—à–∏—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π üåü - '
                                         f'{len(achivments)}', reply_markup=markup)
                else:
                    await message.answer('–ü—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é. –û—Ç–ø—Ä–∞–≤–∏–≤ —Å–æ–æ–±—â–µ–Ω–∏–µ /start')


            case phr.search_game:
                await message.answer('–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –Ω–∞–π—Ç–∏. \n–û—Ç–ø—Ä–∞–≤—å—Ç–µ /cancel –¥–ª—è –æ—Ç–º–µ–Ω—ã')
                await Store.search_game.set()


            case phr.store:
                types = db.return_type()
                markup = kb.store_kb_types(types)
                if not len(markup['inline_keyboard']):
                    await message.answer(f'–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ç–æ–≤–∞—Ä –≤ –º–∞–≥–∞–∑–∏–Ω–µ ‚ùå')
                else:
                    await message.answer_photo(photo='AgACAgIAAxkBAAIlRmS0kvRiHbkGzpyvclOYwC94Wfb8AAL9zjEbWFuhSWJYQDJSBo2bAQADAgADeQADLwQ',caption=f'–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –≤–∞—Å –∫–∞—Ç–µ–≥–æ—Ä–∏—é üëá', reply_markup=markup)


            case phr.shop:
                await message.answer_photo(photo='AgACAgIAAxkBAAIlSGS0kvRFxrhXUkBn47w7TfhKssj7AAL_zjEbWFuhSVPyV3miV65oAQADAgADeQADLwQ',caption='–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –≤–∞—Å —Ñ—É–Ω–∫—Ü–∏—é üëá ', reply_markup=kb.shop_kb)
            case phr.main_menu:
                await message.answer('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚ú®', reply_markup=kb.main_kb)
            case phr.shop_statistic:
                await message.answer(db.bot_statistic())
            case phr.about_us:
                markup = InlineKeyboardMarkup()
                tg_chanel = InlineKeyboardButton('–¢–µ–ª–µ–≥—Ä–∞–º-–∫–∞–Ω–∞–ª', url='https://t.me/BorchStore')
                designer = InlineKeyboardButton('–î–∏–∑–∞–π–Ω–µ—Ä', url='https://t.me/cuddies19')
                programmist = InlineKeyboardButton('–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç', url='https://t.me/XRenso')
                user_paper = InlineKeyboardButton('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ', url='https://telegra.ph/Polzovatelskoe-soglashenie-06-21-6')
                markup.add(user_paper)
                markup.row(designer,programmist)
                markup.add(tg_chanel)

                await message.answer_photo(photo='AgACAgIAAxkBAAIlRWS0kvQ3UB9D23YElI6zwb_iEr40AAL8zjEbWFuhSaYY_HtSoELTAQADAgADeQADLwQ',caption=phr.info, reply_markup=markup)
    else:
        await message.answer('–û–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –º–æ–∂–Ω–æ –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ: ', reply_markup=kb.agreement_ikb)
