from loader import dp,db
import keyboards as kb
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram import types
import phrase as phr
from aiogram.types import InputMediaPhoto


@dp.callback_query_handler(kb.show_more_game_genre.filter())
async def get_games_by_genre(call:types.CallbackQuery, callback_data: dict):

    type_code = callback_data['type_code']
    genre_code = callback_data['genre_code']
    page = int(callback_data['page'])
    markup = kb.return_library(db.return_game_by_genre(genre_code, type_code), type='store',page=page, type_code=type_code, category_code=genre_code).add(InlineKeyboardButton('–ù–∞–∑–∞–¥ ‚Ü©Ô∏è', callback_data=kb.store_action.new(f'{type_code}@go_to_genres')))
    content = InputMediaPhoto(media='AgACAgIAAxkBAAIlRmS0kvRiHbkGzpyvclOYwC94Wfb8AAL9zjEbWFuhSWJYQDJSBo2bAQADAgADeQADLwQ', caption=f'–¢–æ–≤–∞—Ä—ã –∂–∞–Ω—Ä–∞ {db.return_genre_name_by_code(genre_code, type_code)}:')
    await call.message.edit_media(content,reply_markup=markup)

@dp.callback_query_handler(kb.end_list.filter())
async def list_is_end(call:types.CallbackQuery, callback_data: dict):
    await call.answer('–î–∞–ª—å—à–µ –Ω–∏—á–µ–≥–æ –Ω–µ—Ç', show_alert=False)

@dp.callback_query_handler(kb.get_all_pages.filter())
async def change_page_of_group(call:types.CallbackQuery, callback_data: dict):
    type = callback_data['type']
    category_code = callback_data['category_code']
    type_code = None
    match type:
        case 'store':
            type_code = callback_data['type_code']
    markup = InlineKeyboardMarkup(row_width=5)
    if type_code:
        games = db.return_game_by_genre(category_code, type_code)
        pages = len(games)//5
        if len(games)%5 != 0:
            pages+=1
        for i in range(1,pages+1):
            markup.insert(InlineKeyboardButton(f'{i}',callback_data=kb.show_more_game_genre.new(type_code,category_code,str(i-1))))
        content = InputMediaPhoto(
            media='AgACAgIAAxkBAAIlRmS0kvRiHbkGzpyvclOYwC94Wfb8AAL9zjEbWFuhSWJYQDJSBo2bAQADAgADeQADLwQ',
            caption=f'–¢–æ–≤–∞—Ä—ã –∂–∞–Ω—Ä–∞ {db.return_genre_name_by_code(category_code, type_code)}\n–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É:')
        await call.message.edit_media(content,reply_markup=markup)
    else:

        if category_code != '–í—Å–µ –∏–≥—Ä—ã':
            games = []
            try:
                for i in db.return_user_group(call.message.chat.id, category_code):
                    games.append(db.return_game_info(i))

            except TypeError:
                markup = InlineKeyboardMarkup()
                markup.insert(InlineKeyboardButton(phr.back_to_game, callback_data=kb.back_to_user_group.new('ok')))
                await call.message.edit_caption(
                    f'–î–∞–Ω–Ω–æ–π –≥—Ä—É–ø–ø—ã –±–æ–ª—å—à–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ù–∞–∂–º–∏—Ç–µ –Ω–∞–∑–∞–¥, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫—É',
                    reply_markup=markup)
            if games:
                pages = len(games) // 5
                if len(games) % 5 != 0:
                    pages += 1
                for i in range(1,pages+1):
                    markup.insert(InlineKeyboardButton(f'{i}',
                                                    callback_data=kb.get_user_group.new(category_code,
                                                                                              str(i - 1))))
                await call.message.edit_caption(caption=f'–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è - ¬´{category_code}¬ª\n–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É:', reply_markup=markup)
        else:
            games = db.return_user_library_games(call.message.chat.id)
            pages = len(games) // 5
            if len(games) % 5 != 0:
                pages += 1
            for i in range(1, pages + 1):
                markup.insert(InlineKeyboardButton(f'{i}',
                                                callback_data=kb.get_user_group.new(category_code,
                                                                                    str(i - 1))))
            await call.message.edit_caption(caption=f'–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è - ¬´{category_code}¬ª\n–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É:', reply_markup=markup)

@dp.callback_query_handler(kb.show_genres_by_type.filter())
async def get_genres_by_type(call:types.CallbackQuery, callback_data: dict):
    type_code = callback_data['type_code']
    genres = db.return_genres(type_code)
    markup = kb.store_kb_genres(genres, type_code)
    back_to_types = InlineKeyboardButton(phr.back_to_game, callback_data=kb.store_action.new(f'{type_code}@go_to_types'))
    markup.add(back_to_types)
    if not len(markup['inline_keyboard']):
        await call.message.edit_caption(f'–ò–≥—Ä—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ –º–∞–≥–∞–∑–∏–Ω–µ ‚ùå')
    else:
        await call.message.edit_caption(f'–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –∂–∞–Ω—Ä üëá', reply_markup=markup)

@dp.callback_query_handler(kb.store_action.filter())
async def store_handler(call:types.CallbackQuery, callback_data: dict):
    info = callback_data['action'].split('@')
    action = info[1]
    type_code = info[0]
    match action:
        case 'go_to_genres':
            genres = db.return_genres(type_code)
            back_to_types = InlineKeyboardButton(phr.back_to_game,
                                                 callback_data=kb.store_action.new(f'{type_code}@go_to_types'))
            markup = kb.store_kb_genres(genres, type_code)
            markup.add(back_to_types)
            content = InputMediaPhoto(media='AgACAgIAAxkBAAIlRmS0kvRiHbkGzpyvclOYwC94Wfb8AAL9zjEbWFuhSWJYQDJSBo2bAQADAgADeQADLwQ', caption=f'–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –≤–∞—Å –∂–∞–Ω—Ä üëá')
            await call.message.edit_media(content, reply_markup=markup)
        case 'go_to_types':
            types = db.return_type()
            markup = kb.store_kb_types(types)
            if not len(markup['inline_keyboard']):
                await call.message.edit_text(f'–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ç–æ–≤–∞—Ä –≤ –º–∞–≥–∞–∑–∏–Ω–µ ‚ùå')
            else:
                content = InputMediaPhoto(media='AgACAgIAAxkBAAIlRmS0kvRiHbkGzpyvclOYwC94Wfb8AAL9zjEbWFuhSWJYQDJSBo2bAQADAgADeQADLwQ', caption=f'–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –≤–∞—Å –∫–∞—Ç–µ–≥–æ—Ä–∏—é üëá')
                await call.message.edit_media(content, reply_markup=markup)


